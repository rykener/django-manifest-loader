name: Django Manifest Loader CI
on:
  push:
    branches:
      - 'main'
jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]

    env:
      GOOGLE_APPLICATION_CREDENTIALS: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
      GCR_REPO_NAME: '${{ secrets.GCR_REPO_NAME }}'
      GCR_REPO_LOCATION: '${{ secrets.GCR_REPO_LOCATION }}'
      GCR_SERVICE_ACCOUNT_EMAIL: '${{ secrets.GCR_SERVICE_ACCOUNT_EMAIL }}'
      GC_PROJECT_ID: '${{ secrets.GC_PROJECT_ID }}'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
    - name: Google Cloud Artifact Registry Setup
      run: |
        gcloud config set artifacts/repository $GCR_REPO_NAME
        gcloud config set artifacts/location $GCR_REPO_LOCATION
        gcloud config set account $GCR_SERVICE_ACCOUNT_EMAIL
        gcloud auth activate-service-account $GCR_SERVICE_ACCOUNT_EMAIL --key-file=$GOOGLE_APPLICATION_CREDENTIALS --project=$GC_PROJECT_ID
        gcloud artifacts print-settings python > ~/.pypirc
        mkdir -p ~/.config/pip
        cp ~/.pypirc ~/.config/pip/pip.conf
    - name: Install Python Dependencies 
      run: |
        python -m pip install --upgrade pip
        python -m pip install mistune==0.8.4
        python -m pip install m2r
        python -m pip install -e .'[build]'
    - name: Build Package and Upload
      run: |
        python setup.py sdist bdist_wheel
        python -m twine upload --repository $GCR_REPO_NAME dist/*
